shiny::runApp('C:/Users/Nick/OneDrive/Documents/Kidwell Project/Binary Outcome SMART/SMARTsize')
shiny::runApp('C:/Users/Nick/OneDrive/Documents/Kidwell Project/Binary Outcome SMART/SMARTsize')
deployApp()
library(shinyapps)
setwd("~/")
deployApp()
wd
setwd()
setwd("~/")
setwd("C:/Users/Nick/OneDrive/Documents/Kidwell Project/Binary Outcome SMART/SMARTsize")
deployApp()
shiny::runApp()
deployApp()
shiny::runApp()
deployApp()
shiny::runApp()
deployApp()
?singleton
?numericInput
numericInput
as.numeric("7/10")
install.packages("shinyBS")
force.package<-function(package){
#adapted from
#http://r.789695.n4.nabble.com/Install-package-automatically-if-not-there-tp2267532p2267659.html
package<-as.character(substitute(package))
if (package %in% .packages(all.available=TRUE)){
eval(parse(text=paste("require(",package,")", sep="")))
}
else {
eval(parse(text=paste("install.packages('",package,"')",sep="")))
eval(parse(text=paste("require(",package,")", sep="")))
}
}
force.package(shinyBS)
remove.packages("shinyBS")
force.package(shinyBS)
install.packages("shinyBS")
force.package(shinyBS)
?bsTooltip
shiny::runApp()
bsDemo()
shiny::runApp()
numericInput
names(tags)
shiny::runApp()
shiny:::'%OR%'
shiny:::'%AND%'
numericInputMini<- function (inputId, label, value, min = NA, max = NA, step = NA,...)
{
inputTag <- tags$input(id = inputId, type = "number", value = formatNoSci(value),...)
if (!is.na(min))
inputTag$attribs$min = min
if (!is.na(max))
inputTag$attribs$max = max
if (!is.na(step))
inputTag$attribs$step = step
tagList(label shiny:::'%AND%' tags$label(label, `for` = inputId), inputTag)
}
numericInputMini<- function (inputId, label, value, min = NA, max = NA, step = NA,...) {
inputTag <- tags$input(id = inputId, type = "number", value = formatNoSci(value),...)
if (!is.na(min))
inputTag$attribs$min = min
if (!is.na(max))
inputTag$attribs$max = max
if (!is.na(step))
inputTag$attribs$step = step
tagList(label shiny:::'%AND%' tags$label(label, `for` = inputId), inputTag)
}
?tagList
?'for'
'for'
names(tags$input$attribs)
names(tags$input)
names(tags)
names(tags$input)
names(tags$input$attribs)
inputTag$attribs$step = step
numericInputMini<- function (inputId, label, value, min = NA, max = NA, step = NA,...) {
inputTag <- tags$input(id = inputId, type = "number", value = formatNoSci(value),...)
if (!is.na(min))
inputTag$attribs$min = min
if (!is.na(max))
inputTag$attribs$max = max
if (!is.na(step))
inputTag$attribs$step = step
tagList(label shiny:::'%AND%' tags$label(label, `for` = inputId), inputTag)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
textInput2<-function (inputId, label, value = "",...)
{
tagList(tags$label(label, `for` = inputId), tags$input(id = inputId,
type = "text", value = value,...))
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
numericInputMini<- function (inputId, label, value, min = NA, max = NA, step = NA, class="input-mini") {
inputTag <- tags$input(id = inputId, type = "number", value = as.numeric(value))
if (!is.na(min))
inputTag$attribs$min = min
if (!is.na(max))
inputTag$attribs$max = max
if (!is.na(step))
inputTag$attribs$step = step
tagList(tags$label(label, `for` = inputId), inputTag)
}
shiny::runApp()
force.package(shinyBS)
library("shinyBS")
